
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
</head>
<body>

<div class="explanation">
    <p>Remote View/Control is an amazing ItsNat feature. A different
       user/session/browser/page can be attached to an already loaded page (document) of another user/session/browser.
       This feature opens a world of applications: "legal spy", help desk, cooperative applications,
       broadcasted "web shows", online teaching (slides, demos) etc.
    </p>
    <p>The attached client has two modes, read-only and full control. In read-only mode
        some remote control support is provided in the server because user defined code can be executed
        when the cloned page is going to be updated. In full remote control the attached
        client can send events to the server the same as the first client which loaded the document in server.
    </p>
    <p>There are three updating modes of the cloned page: using timers, COMET or no refresh events.</p>
    <p>Of course the remote view/control capability
        is disabled by default and only can be enabled programmatically
        using a user defined listener implementing <code>ItsNatRemoteCtrlEventListener</code>
        registered calling the method <code>addItsNatRemoteCtrlEventListener</code>
        with the concrete <code>ItsNatDocument</code> or <code>ItsNatDocumentTemplate</code>
        or <code>ItsNatServlet</code> (global).
        This listener is used to validate if the requester is authorized to gain access to the requested page,
        any custom parameter may be added to the request URL to identify the requester.
    </p>
    <p>The listener class <code>RemoteControlSupervision</code> is registered in servlet
        level (calling <code>ItsNatServlet.addItsNatRemoteCtrlEventListener</code>) to detect when
        the document being request is not found.
    </p>
    <p>In this example there are two ways to access to the target page:
    </p>
    <ul>
        <li>Asking user<br >
            <p>In this case the user of the page being monitored
            must to approve the monitoring request, custom JavaScript code is sent to the target page
            to ask the user of the page being monitored.
            </p>
            <p>This is the reason of classes <code>RemoteControlTimerMgrGlobalEventListener</code>,
            <code>RemoteControlTimerEventListener</code> and <code>RemoteControlUserRequestEventListener</code>,
            the first one is registered as a global event listener calling <code>ItsNatDocument.addEventListener(EventListener)</code>
            when the page is created. A timer is created to bring to the client
            any pending JavaScript code in server (for instance the remote view/control request)
            when the user is doing nothing, this timer is not forever active to avoid ever active pages
            (and abandoned by the user).
            </p>
        </li>
        <li>Not asking user <br />
            <p>The user ignores is being monitored.</p>
        </li>
    </ul>

</div>

</body>
</html>
